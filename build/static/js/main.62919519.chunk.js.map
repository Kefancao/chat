{"version":3,"sources":["Message.js","Chat.js","Login.js","App.js","index.js"],"names":["Message","props","isUser","firebase","auth","currentUser","displayName","username","className","text","Messages","query","firestore","collection","chatNum","orderBy","limit","useCollectionData","idField","messages","reverse","map","message","spent","timeSent","id","apps","length","app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","Chat","useState","setMessage","messagesRef","scroll","useRef","sendMessage","e","a","preventDefault","user","add","FieldValue","serverTimestamp","current","scrollIntoView","behavior","ref","value","type","placeholder","onChange","event","target","updateMessage","onClick","makeid","result","characters","charactersLength","i","charAt","Math","floor","random","CreateRoom","docRef","rooms","join","roomID","alert","setJoin","setCode","SignOut","logOut","signOut","rerender","old","LogIn","code","setRerender","joinAnonymous","setJoinAnonymous","provider","GoogleAuthProvider","signInWithPopup","name","codeUpdate","lowered","toLowerCase","setKey","App","key","setUser","useEffect","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.62919519.chunk.js","sourcesContent":["import React from 'react'\n\nimport firebase from 'firebase/app'; \nimport 'firebase/auth'; \nimport 'firebase/firestore'\nimport {useCollectionData} from 'react-firebase-hooks/firestore'; \n\nconst firebaseConfig = {\n\tapiKey: \"AIzaSyA4fbIfuvkx1DMtZK-Q0jGuzBZruVzVhRM\",\n\tauthDomain: \"quick-chat-db609.firebaseapp.com\",\n\tprojectId: \"quick-chat-db609\",\n\tstorageBucket: \"quick-chat-db609.appspot.com\",\n\tmessagingSenderId: \"557271218039\",\n\tappId: \"1:557271218039:web:38f82323173721e9111372\",\n\tmeasurementId: \"G-B66PQED7GZ\"\n};\n\nif (!firebase.apps.length) {\n\tfirebase.initializeApp(firebaseConfig);\n}else {\n\tfirebase.app(); // if already initialized, use that one\n}\n\nfunction Message(props){\n\tvar curr; \n\tif (!firebase.auth().currentUser) curr = 'Anonymous'; \n\telse curr = firebase.auth().currentUser.displayName; \n\tvar isUser = curr === props.username ? 'sent': 'received';\n\treturn(\n\t\t<div className={'message' + isUser}>\n\t\t\t<p className='username'>{props.username}</p>\n\t\t\t<p className=\"message\">{props.text}</p>\n\t\t</div>\n\t)\n}\n\n\nexport default function Messages(props) {\n\tconst messagesRef = firebase.firestore().collection(props.chatNum);\n\tconst query = messagesRef.orderBy('timeSent', 'desc').limit(30);\n\tconst [messages] = useCollectionData(query, { idField : 'id' });\n\tif (messages) messages.reverse(); \n\treturn (\n\t\t<div className=\"messageBox\">\n\t\t\t{messages && messages.map(message => (\n\t\t\t\t<Message key={message.id} text={message.text} username={message.username} spent={message.timeSent}/>\n\t\t\t))}\n\t\t</div>\n\n\t)\n}\n","import React, {useState, useRef} from 'react'; \nimport './chatroom.css'; \n\nimport firebase from 'firebase/app'; \nimport 'firebase/auth'; \nimport 'firebase/firestore'\nimport Messages from './Message';\n\nconst firebaseConfig = {\n\tapiKey: \"AIzaSyA4fbIfuvkx1DMtZK-Q0jGuzBZruVzVhRM\",\n\tauthDomain: \"quick-chat-db609.firebaseapp.com\",\n\tprojectId: \"quick-chat-db609\",\n\tstorageBucket: \"quick-chat-db609.appspot.com\",\n\tmessagingSenderId: \"557271218039\",\n\tappId: \"1:557271218039:web:38f82323173721e9111372\",\n\tmeasurementId: \"G-B66PQED7GZ\"\n};\n\nif (!firebase.apps.length) {\n\tfirebase.initializeApp(firebaseConfig);\n}else {\n\tfirebase.app(); // if already initialized, use that one\n}\n\nexport default function Chat(props) {\n\tconst [message, setMessage] = useState(''); \n\tconst messagesRef = firebase.firestore().collection(props.chatNum);\n\tconst scroll = useRef(); \n\n\tconst updateMessage = (event) => {\n\t\tsetMessage(event.target.value)\n\t}\n\n\tconst sendMessage = async (e) => {\n\t\t// Send Message into FireBase\n\t\te.preventDefault(); \n\n\t\tif (!message) return; \n\t\tvar user = firebase.auth().currentUser ? firebase.auth().currentUser.displayName : 'Anonymous'; \n\t\tawait messagesRef.add({\n\t\t\ttext: message, \n\t\t\ttimeSent : firebase.firestore.FieldValue.serverTimestamp(),\n\t\t\tusername : user,\n\t\t})\n\t\tsetMessage('');\n\t\t\n\t\tscroll.current.scrollIntoView({behavior : 'smooth'})\n\n\t}\n\treturn (\n\t\t<div className=\"chatroom\">\n\t\t\t<div className='scroll'>\n\t\t\t\t<Messages chatNum={props.chatNum} />\n\t\t\t\t<span ref={scroll}></span>\n\t\t\t</div>\n\t\t\t<div className=\"sender\">\n\t\t\t\t<form>\n\t\t\t\t\t<input id=\"messageReader\" value={message} type=\"text\" placeholder=\"Type here...\" onChange={event => updateMessage(event)}></input>\n\t\t\t\t\t<button type='submit' onClick={event => sendMessage(event)}>Send</button>\n\t\t\t\t</form>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n","import React, {useState} from 'react'\n\nimport firebase from 'firebase/app'; \nimport 'firebase/auth'; \nimport 'firebase/firestore'\nimport {useCollectionData} from 'react-firebase-hooks/firestore'; \n\nconst firebaseConfig = {\n\tapiKey: \"AIzaSyA4fbIfuvkx1DMtZK-Q0jGuzBZruVzVhRM\",\n\tauthDomain: \"quick-chat-db609.firebaseapp.com\",\n\tprojectId: \"quick-chat-db609\",\n\tstorageBucket: \"quick-chat-db609.appspot.com\",\n\tmessagingSenderId: \"557271218039\",\n\tappId: \"1:557271218039:web:38f82323173721e9111372\",\n\tmeasurementId: \"G-B66PQED7GZ\"\n};\n\nif (!firebase.apps.length) {\n\tfirebase.initializeApp(firebaseConfig);\n}else {\n\tfirebase.app(); // if already initialized, use that one\n}\n\nfunction makeid(length) {\n\tvar result           = '';\n\tvar characters       = 'abcdefghijklmnopqrstuvwxyz0123456789';\n\tvar charactersLength = characters.length;\n\tfor ( var i = 0; i < length; i++ ) {\n\t\tresult += characters.charAt(Math.floor(Math.random() * charactersLength));\n\t}\n\treturn result;\n}\n\nfunction CreateRoom(props){\n\tconst docRef = firebase.firestore().collection('Rooms'); \n\tconst query = docRef.orderBy('roomID'); \n\tconst [rooms] = useCollectionData(query); \n\n\tconst createRoomKey = () => {\n\t\tvar roomID = makeid(5); \n\t\tremake: \n\t\tfor (var i = 0; i < rooms.length; ++i){\n\t\t\tif (rooms[i] === roomID){\n\t\t\t\troomID = makeid(5); \n\t\t\t\tcontinue remake; \n\t\t\t}\n\t\t}\n\t\tdocRef.add({roomID : roomID}); \n\t\talert(\"Your new room Id is \" + roomID); \n\t\tprops.setJoin(true); \n\t\tprops.setCode(roomID); \n\t}\n\n\treturn (!props.join ? <button className='auth' onClick={createRoomKey}>Create Room</button> : null); \n\n}\nfunction SignOut(props) {\n\tconst logOut = async () => {\n\t\tawait firebase.auth().signOut(); \n\t\tprops.rerender(old => !old); \n\t}\n\treturn firebase.auth().currentUser && (\n\t  <button className=\"auth\" onClick={logOut}>Sign Out</button>\n\t); \n  }\n\n\nexport default function LogIn(props) {\n\tconst [code, setCode] = useState(''); \n\tconst [, setRerender] = useState(false);\n\tconst messagesRef = firebase.firestore().collection('Rooms');\n\tconst query = messagesRef.orderBy('roomID'); \n\tconst [messages] = useCollectionData(query, { idField : 'id' });\n\tconst [joinAnonymous, setJoinAnonymous] = useState(false); \n\n\t// if (firebase.auth().currentUser) props.setUsername(firebase.auth().currentUser.displayName); \n\tconst codeUpdate = (event) => {\n\t\tsetCode(event.target.value); \n\t}\n\n\tconst changeKey = () => {\n\t\tvar lowered = code.toLowerCase(); \n\t\tfor (var i = 0; i < messages.length; ++i){\n\t\t\tif (messages[i].roomID === lowered){\n\t\t\t\tprops.setKey(lowered); \n\t\t\t\treturn; \n\t\t\t}\n\t\t}\n\n\t\talert(\"Invalid Room Id\"); \n\t\tsetCode(''); \n\t}\n\n\tconst auth = async () => {\n\t\tconst provider = new firebase.auth.GoogleAuthProvider();\n    \tawait firebase.auth().signInWithPopup(provider);\n\t\tsetRerender(old => !old); \n\t}\n \n\treturn (\n\t\t<div className=\"signIn\">\n\t\t\t{/* For if the user does not want to sign in and just join as Anonymous */}\n\t\t\t{joinAnonymous ? \n\t\t\t\t<form>\n\t\t\t\t\t<label>Join Code: </label>\n\t\t\t\t\t<input value = {code} type=\"text\" name=\"code\" placeholder=\"Type your code here...\" onChange={event => codeUpdate(event)}></input>\n\t\t\t\t\t<button onClick={changeKey}>Join</button>\n\t\t\t\t</form> \n\t\t\t\t: <button className=\"auth\" onClick={()=> setJoinAnonymous(true)}>Join as {firebase.auth().currentUser ? firebase.auth().currentUser.displayName : 'Anonymous'}</button>\n\t\t\t}\n\t\t\t{/* Google Auth */}\n\t\t\t{!firebase.auth().currentUser ?\n\t\t\t\t<div className=\"auth\"> \n\t\t\t\t\t<button onClick={auth}>Sign In with Google</button>\n\t\t\t\t</div>\n\t\t\t\t: \n\t\t\t\tnull\n\t\t\t} \n\t\t\t{firebase.auth().currentUser ? \n\t\t\t<>\n\t\t\t<CreateRoom setJoin ={setJoinAnonymous} join = {joinAnonymous} setCode={setCode}/>\n\t\t\t<SignOut rerender={setRerender}/> \n\t\t\t</>: null}\n\t\t</div>\n\t)\n}\n","import React, { useState, useEffect } from 'react';\n\nimport Chat from './Chat'; \n\nimport LogIn from './Login';\n\n\nimport firebase from 'firebase/app'; \nimport 'firebase/auth'; \nimport 'firebase/firestore'; \n\nconst firebaseConfig = {\n\tapiKey: \"AIzaSyA4fbIfuvkx1DMtZK-Q0jGuzBZruVzVhRM\",\n\tauthDomain: \"quick-chat-db609.firebaseapp.com\",\n\tprojectId: \"quick-chat-db609\",\n\tstorageBucket: \"quick-chat-db609.appspot.com\",\n\tmessagingSenderId: \"557271218039\",\n\tappId: \"1:557271218039:web:38f82323173721e9111372\",\n\tmeasurementId: \"G-B66PQED7GZ\"\n};\n\nif (!firebase.apps.length) {\n\tfirebase.initializeApp(firebaseConfig);\n}else {\n\tfirebase.app(); // if already initialized, use that one\n}\n\n\nfunction App() {\n  const [key, setKey] = useState('none'); \n  const [user, setUser] = useState(false); \n  \n  useEffect(() => {\n    if (key === 'none' || key === 'noneX'){\n      if (key === 'noneX') alert(\"Invalid Room id :(\")\n      setUser(false); \n    }\n    else setUser(true);  \n  }, [key])\n\n  return (\n    <>\n      <div className=\"outer\">\n        {user ? null : <h1 id=\"outerAppName\">Quick Chat</h1>}\n        {user ? <Chat chatNum={key} /> \n              : <LogIn setKey = {setKey} />}\n      </div>\n    </>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}